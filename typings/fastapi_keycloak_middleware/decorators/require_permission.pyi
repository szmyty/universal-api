"""
This type stub file was generated by pyright.
"""

import typing
from collections.abc import Callable
from fastapi_keycloak_middleware.schemas.match_strategy import MatchStrategy

"""
This module providers a decorator that can be used to check if a user has a specific
permission.
"""
log = ...
def require_permission(permissions: typing.Union[str, typing.List[str]], match_strategy: MatchStrategy = ...) -> Callable:
    """
    This decorator can be used to enfore certain permissions for the path
    function it is applied to.

    :param permissions: The permissions that are required to access the path
        function. Can be a single string or a list of strings.
    :type permissions: typing.Union[str, typing.List[str]], optional
    :param match_strategy: The strategy that is used to match the permissions.
        Defaults to ``MatchStrategy.AND``.
    :type match_strategy: MatchStrategy, optional
    :return: The decorated function
    """
    ...

